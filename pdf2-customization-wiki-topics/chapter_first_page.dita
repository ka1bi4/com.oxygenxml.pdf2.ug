<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_mll_3yb_1y">
  <title>Customizing the chapter's first page</title>
  <shortdesc>This topic describes a customization for DITA-OT PDF2 plugin to change the layout of
    the chapter's first page.</shortdesc>
  <body>
    <p>By default, the DITA-OT PDF2 plugin generates the chapter's first page with the next
        layout:<image href="images/chapter_first_page.PNG" id="image_ns5_2zb_1y"/></p>
    <p>The first two lines presents a static label <b>Chapter</b> followed by the chapter's number.
      On the next line is displayed the chapter's title. After the chapter's title, the available
      space is divided in two columns. On the first column are presented the links to chapter's
      topics, this area is known as <b>MINITOC</b>. On the second column is presented the chapter
      short description followed by the chapter's content.</p>
    <p>We want to simplify the first part of the page to presents the chapter's title and its number
      on a single row followed by a thin line. Also, we want to change the presentation for MINITOC
      and chapter's summary, we want to present them in separate blocks, one after another like in
      the following picture:</p>
    <image href="images/ug-chapter_first_page.PNG" id="image_cxm_2dc_1y"/>
    <p>To implement these requirements we need to override some XSLT templates that are responsible
      for the layout of the chapter's first page. All of these templates are defined in the
        <b>DITA-OT-2.4/plugins/org.dita.pdf2/xsl/fo/commons.xsl</b> file. Thus, I will create a
      similar XSLT stylesheet in the plugin's customization folder with path:
        <b>com.oxygenxml.pdf2.ug/Customization/fo/xsl/commons.xsl</b>. This is a convention that
      helps you to identify the original file from where the templates were copied if you want to
      change them or you find issues in the future.</p>
    <p>You can find below the XSLT templates that should be overridden in order to accomplish this
      task: </p>
    <ul id="ul_wjq_v5v_1y">
      <li>
        <b>&lt;xsl:template match="*" mode="insertChapterFirstpageStaticContent"></b><p>The default
          implementation of this template generated the static text <b>Chapter</b> and the chapter's
          number on separate rows.</p><p><image href="images/chapter_number.PNG"
            id="image_tj3_cwv_1y"/></p>This template will be changed to generate only the chapter's
        number.</li>
      <li><b>&lt;xsl:template name="processTopicChapter"></b><p>This is the template that process
          the entire chapter. We'll change the first part of the template, associated with chapter's
          title and number to generate a table with a row and two cell. The former cell will render
          the chapter's title and the second will be used for its number.</p><p><image
            href="images/chapter_number_ug.PNG" id="image_zqc_xyv_1y"/></p><p>In the same way, we'll
          override other XSLT templates like <b>processTopicNotices</b>, <b>processTopicAppendix</b>
          or <b>processFrontMatterTopic</b> because they are used for top level topics like notices,
          appendix allowed in a DITA bookmap. These topics have a similar rendering like
          chapter.</p></li>
      <li><b>&lt;xsl:template match="*" mode="createMiniToc"></b><p>This template is used to
          generate the MINITOC area. In the left part are presented links to chapter's topics and in
          the right part is presented the chapter's content. </p><p><image href="images/minitoc.PNG"
            id="image_abn_gbw_1y"/></p><p>We'll change this template to generate the both areas one
          after another like in the next picture:</p><p><image href="images/minitoc_ug.PNG"
            id="image_mzk_2bw_1y"/></p></li>
    </ul>
    <p>You can see all these changes on the GITHUB project associated with this customization: <xref
        href="https://github.com/radu-pisoi/com.oxygenxml.pdf2.ug/blob/master/Customization/fo/xsl/commons.xsl"
        format="html" scope="external"/>.</p>
  </body>
</topic>
